# Display the Configuration Window
# Format : className.variable = value

##################
# Message Values #
##################
# --- This values can only be updated when the 'reload properties button is clicked' --- #
# Messages that the GUI will display when reading and errors are produced
repeatReadingLinePanel.errorMessage = "Please read the line again!!!"
repeatReadingLinePanel.numberOfMessagesToBeRepeated = 2
repeatReadingLinePanel.isMessagesToBeRepeated = true
# Displays the number of repetitions left in the pop-up window of the error message
repeatReadingLinePanel.displayNumberOfRepetitionsLeft = false

##########################
# Configuration Settings #
##########################
# --- This values can only be updated when the software is restarted --- #
# --- This is done by storing the value of this configuration in a local variable and read its value on going forward --- #
# --- Also, by using reading the values of this configuration in an initialization function such as the constructor (or others) --- #
# TODO: Move this button outside the repeatReadingLinePanel class
# This reload button will upload the message values - It should reload all values in the GUI
configurationWindow.displayReloadPropertiesButton = true
# Display the Configuration window for the user to adjust the configurations - Useful for adjusting configurations
configurationWindow.display = true
# Disable all other windows when the Configuration window is active - Prevents the user from modifying the values while reading is in progress
configurationWindow.disableWindowOnReading = true
# Display the window to play audio files
menuBar.openAudio = true

# TODO: Find out how the creation and deletion of directories work with jar files - put the directories at the same level of the executing file
#######################################
# Speech Manager Configuration Values #
#######################################
# Configuration to load for the Speech Manager - Sphinx
# TODO: Make the default configuration file a read-only file to prevent the user from accidentally deleting it
speechManager.speechConfiguration = readerAdvisor.config.xml
# Grammar file Name
speechManager.GRAMMAR = readerAdvisor
# TODO: Upgrade the grammarDirectory to settings used at the below section
# This folder is create and delete when the program is running
# Directory where the temporary grammar will be stored
speechManager.grammarDirectory = temp

#######################################
# Folders to be created to store data #
#######################################
# -------------- AUDIO DIRECTORY -------------- #
# Directory where the audio files will be stored
saveAudioFilePanel.audioDirectory = audio
# Set the property to Delete the audio directory
# true - Delete the directory when the program exits successfully
# false - Do not delete the directory when the program exits successfully
saveAudioFilePanel.audioDirectoryDeleteOnExit = true